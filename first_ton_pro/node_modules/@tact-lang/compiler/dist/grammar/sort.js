"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AstSorter = void 0;
const errors_1 = require("../errors");
/**
 * Provides utilities to sort lists of AST nodes.
 */
// eslint-disable-next-line @typescript-eslint/no-extraneous-class
class AstSorter {
    static sort(items) {
        if (items.length === 0) {
            return items;
        }
        const kind = items[0].kind;
        switch (kind) {
            case "primitive_type_decl":
                return this.sortPrimitiveTypeDecls(items);
            default:
                (0, errors_1.throwInternalCompilerError)(`Unsupported node kind: ${kind}`);
        }
    }
    static sortPrimitiveTypeDecls(decls) {
        return decls.sort((a, b) => {
            // Case-insensitive sorting
            const nameA = a.name.text.toLowerCase();
            const nameB = b.name.text.toLowerCase();
            if (nameA < nameB) {
                return -1;
            }
            if (nameA > nameB) {
                return 1;
            }
            return 0;
        });
    }
    static sortAttributes(attributes) {
        return attributes.sort((a, b) => a.type.localeCompare(b.type));
    }
}
exports.AstSorter = AstSorter;
